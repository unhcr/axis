%header
  .idx
    = Visio.Utils.numberToLetter context.idx

  .row.header
    .col-sm-8
      %h5.ui-primary
        - if context.model.name == Visio.Parameters.OPERATIONS
          = context.model.toString().toUpperCase()
        - else
          = context.model.toString()

%section
  - algorithm = context.filters.get('algorithm').active()
  - human = context.filters.get('algorithm').get('human')?[algorithm]
  .row
    .col-sm-8
      .ui-big-number.ui-primary-light
        = context.achievement.total
      .bold
        - if context.filters.get('is_performance').filter('true')
          = "Performance Indicators"
        - else
          = "Impact Indicators"
    .col-sm-4.center-text
      .achievement-percent
      .top-flush
        - context.achievement.result
        %h3.number
          = Visio.Formats.PERCENT context.achievement.result
        .ui-primary.bold.achievement-label
          Achievement

  .row
    .col-sm-12
      .col-sm-12.top-flush.divider-light-gray

  .row
    .col-sm-12
      .bold
        = "Progress towards #{Visio.Utils.humanMetric(context.filters.get('achievement').active())}."

  .row
    .col-md-12
      .achievement-figure

%section
  .row.divider-dotted-primary

  .row
    .col-sm-12
      .bold
        = human
  .row
    .col-sm-12
      - colSize = Math.floor 12 / context.cols.length
      - cloned = new Visio.Collections.FigureFilter(_.map(context.filters.toJSON(), (d) -> $.extend(true, {}, d)))
      - _.each context.rows, (scenario, rowNum) ->
        .row.table-row
          - cloned.get('scenario').filterOff()
          - cloned.get('scenario').filter scenario, true

          - if rowNum == 0
            .col-sm-1.cell &nbsp;
          - else
            .col-sm-1.right-text.table-header.horizontal-flush.cell
              - if scenario == Visio.Scenarios.AOL
                = 'AOL'
              - else
                = 'OL'

          .col-sm-8.zero-padding
            - _.each context.cols, (budget, colNum) ->
              - cloned.get('budget_type').filterOff()
              - cloned.get('budget_type').filter budget, true

              - if rowNum == 0
                .table-header.cell{ :class => "col-sm-#{colSize}" }
                  = budget.toLowerCase()
              - else
                .table-datum.cell{ :class => "col-sm-#{colSize}" }
                  - result = context.model[algorithm](Visio.manager.year(), cloned)
                  = Visio.Formats.LONG_MONEY(result)


          - if rowNum == 0
            .col-sm-3.table-header.table-total.cell
              = 'TOTAL'
          - else
            .col-sm-3.table-datum.table-total.cell
              - result = context.model[algorithm](Visio.manager.year(), context.filters)
              = Visio.Formats.LONG_MONEY(result)
          .clearfix

        - if rowNum == 0
          .divider-light-gray.col-sm-offset-1
        - else
          .divider-dotted-primary.col-sm-offset-1

  .row
    .col-sm-12.right-text.bold.cell
      = Visio.Formats.LONG_MONEY(context.model[algorithm](Visio.manager.year(), context.filters))
